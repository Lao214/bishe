<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mymusic.dao.ArticleDao">

    <resultMap type="com.example.mymusic.entity.Article" id="ArticleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="articleNo" column="article_no" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="author" column="author" jdbcType="VARCHAR"/>
        <result property="images" column="images" jdbcType="VARCHAR"/>
        <result property="cover" column="cover" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="likes" column="likes" jdbcType="INTEGER"/>
        <result property="comment" column="comment" jdbcType="INTEGER"/>
        <result property="collect" column="collect" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryArticleByArticleNo" resultMap="ArticleMap">
        select id,
               article_no,
               title,
               author,
               images,
               cover,
               content,
               status,
               create_time,
               update_time,
               remark,
               likes,
               comment,
               collect
        from music.article
        where article_no = #{articleNo}
    </select>

    <!--查询单个-->
    <select id="queryArticleByArticleId" resultMap="ArticleMap">
        select id,
               article_no,
               title,
               author,
               images,
               cover,
               content,
               status,
               create_time,
               update_time,
               remark,
               likes,
               comment,
               collect
        from music.article
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ArticleMap">
        select id,
               article_no,
               title,
               author,
               images,
               cover,
               content,
               status,
               create_time,
               update_time,
               remark,
               likes,
               comment,
               collect
        from music.article
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ArticleMap">
        select
        id, article_no, title, author, images, cover, content, status, create_time, update_time, remark, likes, comment,
        collect
        from music.article
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="articleNo != null and articleNo != ''">
                and article_no = #{articleNo}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="author != null and author != ''">
                and author = #{author}
            </if>
            <if test="images != null and images != ''">
                and images = #{images}
            </if>
            <if test="cover != null and cover != ''">
                and cover = #{cover}
            </if>
            <if test="content != null">
                and content = #{content}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="likes != null">
                and likes = #{likes}
            </if>
            <if test="comment != null">
                and comment = #{comment}
            </if>
            <if test="collect != null">
                and collect = #{collect}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="addArticle" keyProperty="articleNo" useGeneratedKeys="true">
        insert into music.article(id,article_no, title, author, images, cover, content, status, create_time, update_time, remark,
                                  likes, comment, collect)
        values (#{id}, #{articleNo}, #{title}, #{author}, #{images}, #{cover}, #{content}, #{status}, #{createTime},
                #{updateTime}, #{remark}, #{likes}, #{comment}, #{collect})
    </insert>

    <insert id="insertBatch" keyProperty="articleNo" useGeneratedKeys="true">
        insert into music.article(id, article_no,title, author, images, cover, content, status, create_time, update_time, remark,
        likes, comment, collect)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.articleNo}, #{entity.title},#{entity.author}, #{entity.images}, #{entity.cover}, #{entity.content},
            #{entity.status}, #{entity.createTime}, #{entity.updateTime}, #{entity.remark}, #{entity.likes},
            #{entity.comment}, #{entity.collect})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="articleNo" useGeneratedKeys="true">
        insert into music.article(id, title, author, images, cover, content, status, create_time, update_time, remark,
        likes, comment, collect)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.articleNo}, #{entity.title}, #{entity.author}, #{entity.images}, #{entity.cover},
            #{entity.content}, #{entity.status}, #{entity.createTime}, #{entity.updateTime}, #{entity.remark},
            #{entity.likes}, #{entity.comment}, #{entity.collect})
        </foreach>
        on duplicate key update
        id = values(id) , article_no = values(article_no) , title = values(title) , author = values(author) , images =
        values(images) , cover = values(cover) , content = values(content) , status = values(status) , create_time =
        values(create_time) , update_time = values(update_time) , remark = values(remark) , likes = values(likes) ,
        comment = values(comment) , collect = values(collect)
    </insert>

    <!--通过主键修改数据-->
    <update id="updateArticle">
        update music.article
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="author != null and author != ''">
                author = #{author},
            </if>
            <if test="images != null and images != ''">
                images = #{images},
            </if>
            <if test="cover != null and cover != ''">
                cover = #{cover},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="likes != null">
                likes = #{likes},
            </if>
            <if test="comment != null">
                comment = #{comment},
            </if>
            <if test="collect != null">
                collect = #{collect},
            </if>
        </set>
        where article_no = #{articleNo}
    </update>

    <!--通过主键删除-->
    <delete id="deleteByArticleNo">
        delete
        from music.article
        where article_no = #{articleNo}
    </delete>


    <!-- 删除优惠券表  -->
    <update id="deleteArticleBySongNo" parameterType="java.lang.String">
        update music.article
        <set>
            status = 'delete',
            update_time =now()
            where article_no = #{articleNo}
        </set>
    </update>

    <!-- 分页查询订单表数量统计 -->
    <select id="queryAllCount"  resultType="java.lang.Long">
        select count(1)
        from music.article
    </select>

</mapper>

